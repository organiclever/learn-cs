{
  "name": "learn-cs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "npm run test:all",
    "test:all": "npm run cs-ts:test && npm run cs-py:test && npm run cs-go:test && npm run cs-rust:test && npm run cs-java:test && npm run cs-clj:test",
    "test:watch": "concurrently \"npm run cs-ts:test:watch\" \"npm run cs-py:test:watch\" \"npm run cs-go:test:watch\" \"npm run cs-rust:test:watch\" \"npm run cs-java:test:watch\"",
    "install:all": "npm install && npm run cs-ts:install && npm run cs-py:install && npm run cs-java:install",
    "cs-ts:test": "cd contents/cs-ts && npm test",
    "cs-ts:test:watch": "cd contents/cs-ts && npm run test:watch",
    "cs-ts:install": "cd contents/cs-ts && npm install",
    "cs-py:test": "cd contents/cs-py && . venv/bin/activate && python -m pytest && deactivate",
    "cs-py:test:watch": "cd contents/cs-py && . venv/bin/activate && pytest-watch && deactivate",
    "cs-py:install": "cd contents/cs-py && python -m venv venv && . venv/bin/activate && pip install -r requirements.txt pytest && deactivate",
    "cs-go:test": "cd contents/cs-go && go test ./...",
    "cs-go:test:watch": "cd contents/cs-go && (find . -name '*.go' | entr -c -s 'go test ./...')",
    "cs-rust:test": "cd contents/cs-rust && cargo test",
    "cs-rust:test:watch": "cd contents/cs-rust && (find . -name '*.rs' | entr -c -s 'cargo test')",
    "cs-java:test": "cd contents/cs-java && mvn test",
    "cs-java:test:watch": "nodemon --watch contents/cs-java/src --ext java --exec \"npm run cs-java:test\"",
    "cs-java:install": "cd contents/cs-java && mvn install",
    "cs-clj:test": "cd contents/cs-clj && clojure -M:test:run-tests",
    "format:rust": "find . -name '*.rs' -not -path '*/target/*' | xargs rustfmt",
    "format:go": "find . -name '*.go' | xargs gofmt -w",
    "format:java": "prettier --write --parser java --plugin=prettier-plugin-java \"contents/cs-java/**/*.java\"",
    "format:xml": "prettier --write --parser xml \"**/*.xml\"",
    "prepare": "husky install",
    "lint-staged": "lint-staged",
    "husky:pre-push": "husky add .husky/pre-push 'npm test'",
    "reset:all": "npm run reset:node && npm run reset:py && npm run reset:java && npm run reset:rust && npm run reset:go && npm run install:all",
    "reset:node": "rm -rf node_modules package-lock.json && cd contents/cs-ts && rm -rf node_modules package-lock.json",
    "reset:py": "rm -rf contents/cs-py/venv",
    "reset:java": "cd contents/cs-java && mvn clean",
    "reset:rust": "cd contents/cs-rust && cargo clean",
    "reset:go": "go clean -cache -testcache -modcache",
    "doctor": "node doctor.js",
    "preinstall": "node doctor.js"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "ts-node": "^10.9.2",
    "husky": "^8.0.0",
    "lint-staged": "^13.0.0",
    "prettier": "^3.0.0",
    "prettier-plugin-java": "^2.2.0",
    "concurrently": "^8.0.1",
    "nodemon": "^2.0.22"
  },
  "lint-staged": {
    "*.{ts,js,md,json}": "prettier --write",
    "**/*.rs": "npm run format:rust",
    "**/*.go": "npm run format:go",
    "**/*.java": "npm run format:java",
    "**/*.xml": "npm run format:xml"
  },
  "volta": {
    "node": "20.17.0",
    "npm": "10.8.3"
  }
}
